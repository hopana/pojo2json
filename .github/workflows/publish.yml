# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#Publishing-using-gradle

name: Gradle Publish

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - v*

jobs:
  # Prepare and publish the plugin to JetBrains Marketplace repository
  release:
    name: Publish Plugin
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
    # Check out current repository
    - name: Fetch Sources
      uses: actions/checkout@v3
      with:
        ref: ${{ github.event.release.tag_name }}
        
    # Set up Java environment for the next steps
    - name: Setup Java
      uses: actions/setup-java@v3
      with:
        distribution: zulu
        java-version: 17
        #settings-path: ${{ github.workspace }} # location for the settings.xml file

    # Setup Gradle
    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2
      with:
        gradle-version: '8.3'
        gradle-home-cache-cleanup: true

    # Publish the plugin to JetBrains Marketplace
    # See https://github.com/JetBrains/intellij-platform-plugin-template
    - name: Publish Plugin
      env:
        PUBLISH_TOKEN: ${{ secrets.PUBLISH_TOKEN }}
        CERTIFICATE_CHAIN: ${{ secrets.CERTIFICATE_CHAIN }}
        PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
        PRIVATE_KEY_PASSWORD: ${{ secrets.PRIVATE_KEY_PASSWORD }}
      run: gradle publishPlugin -x test
